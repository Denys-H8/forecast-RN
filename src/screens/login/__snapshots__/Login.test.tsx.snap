// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Forecast  should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#191C39",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": 32,
        "paddingVertical": 50,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "paddingBottom": 12,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#8B8EA5",
              "borderRadius": 100,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#191C39",
                  "fontSize": 40,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            placeholder="Email"
            placeholderTextColor="#fff"
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "flex": 1,
                  "fontFamily": "WorkSans-Regular.ttf",
                  "fontSize": 16,
                  "lineHeight": 18,
                  "marginLeft": 8,
                },
                Object {},
              ]
            }
            testID="Input.TextInput"
            underlineColorAndroid="transparent"
            value="email"
          />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "paddingTop": 12,
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#8B8EA5",
              "borderRadius": 100,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#191C39",
                  "fontSize": 40,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            placeholder="Password"
            placeholderTextColor="#fff"
            rejectResponderTermination={true}
            secureTextEntry={true}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "flex": 1,
                  "fontFamily": "WorkSans-Regular.ttf",
                  "fontSize": 16,
                  "lineHeight": 18,
                  "marginLeft": 8,
                },
                Object {},
              ]
            }
            testID="Input.TextInput"
            underlineColorAndroid="transparent"
            value="password"
          />
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#7B61FF",
          "borderRadius": 100,
          "height": 48,
          "justifyContent": "center",
          "opacity": 0.4,
        }
      }
      testID="Button.TouchableOpacity"
    >
      <Text
        style={
          Array [
            Object {
              "fontFamily": "WorkSans-Regular",
            },
            Object {
              "color": "#fff",
              "fontSize": 16,
              "lineHeight": 18,
            },
          ]
        }
      >
        LOGIN
      </Text>
    </View>
  </View>
</View>
`;
